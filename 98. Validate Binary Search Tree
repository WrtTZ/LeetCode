/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void pre_traverse(TreeNode* root, vector<int>& r) {
        if (root == nullptr) {
            return;
        }
        pre_traverse(root->left, r);
        r.push_back(root->val);
        pre_traverse(root->right, r);
    }
    
    bool isValidBST(TreeNode* root) {
        vector<int> r;
        pre_traverse(root, r);
        
        for (int i = 1; i < r.size(); i++) {
            if (r[i] <= r[i - 1]) {
                return false;
            }
        }
        
        return true;
    }
};
